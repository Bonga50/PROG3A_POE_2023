@model PROG3A_POE.Models.Product

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductID" class="control-label"></label>
                <input asp-for="ProductID" class="form-control" readonly/>
                <span asp-validation-for="ProductID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label">Product Name</label>
                <input asp-for="ProductName" class="form-control" name="txtProductName"/>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="dropdown my-2 form-group">
                <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" id="dpProductType">
                    @Model.ProductType
                </button>
                <ul class="dropdown-menu">
                    <li class="@(Model.ProductType == "Fruits" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectProdType('Fruits')">Fruits</a></li>
                    <li class="@(Model.ProductType == "Vegetables" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectProdType('Vegetables')">Vegetables</a></li>
                    <li class="@(Model.ProductType == "Grains" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectProdType('Grains')">Grains</a></li>
                    <li class="@(Model.ProductType == "Dairy Products" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectProdType('Dairy Products')">Dairy Products</a></li>
                    <li class="@(Model.ProductType == "Poultry" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectProdType('Poultry')">Poultry</a></li>
                </ul>
                <input type="hidden" name="txtproductType" id="selectedProdType" value="@Model.ProductType" />
            </div>
            <div class="form-group">
                <label asp-for="ProductDate" class="control-label"></label>
                <input asp-for="ProductDate" class="form-control" name="txtProductDate" />
                <span asp-validation-for="ProductDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" name="txtQuantity" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            
            <div>
                <button type="submit" class="btn btn-primary my-2" asp-action="Edit">Update</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="AllProducts">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function selectProdType(prodType) {
            document.getElementById('dpProductType').textContent = prodType;
            document.getElementById('selectedProdType').value = prodType;
        }

        // Update dropdown menu text when page loads (optional)
        window.addEventListener('DOMContentLoaded', function () {
            var selectedProdType = document.getElementById('selectedProdType').value;
            if (selectedProdType) {
                document.getElementById('dpProductType').textContent = selectedProdType;
            }
        });
    </script>
}
