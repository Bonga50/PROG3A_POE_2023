@model IEnumerable<PROG3A_POE.Models.User>
@{
    ViewData["Title"] = "AllFarmers";
    string selectedRole = TempData["SelectedRole"] as string;
    if (string.IsNullOrEmpty(selectedRole))
    {
        selectedRole = "Farmer"; // Set the default role here
    }
}


<h1>All Users</h1>

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" id="dropdownButton">
        @selectedRole
    </button>
    <ul class="dropdown-menu">
        <li class="@(selectedRole == "Farmer" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectRole('Farmer')">Farmer</a></li>
        <li class="@(selectedRole == "Employee" ? "active" : "")"><a class="dropdown-item" href="#" onclick="selectRole('Employee')">Employee</a></li>
    </ul>
</div>

<form id="form" method="post">
    <input type="hidden" name="role" id="selectedRole" value="@selectedRole" />
</form>


<p>
    <a asp-action="Create">Create New Farmer</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User_Roles)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User_Roles)
            </td>
            <td>
                    @if (selectedRole.Equals("Farmer"))
                    {
                        <span>
                            @Html.ActionLink("Edit", "Edit", new { id=item.Username  })
                        </span>
                        <span>
                    @Html.ActionLink("Details", "Details", new { id = item.Username }) </span>
                        <span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.Username }) </span>
                        <span>
                            @Html.ActionLink("View Products", "ViewProducts", new { id = item.Username })</span>
                    }
                    else{
                        <span>
                            @Html.ActionLink("Edit", "Edit", new { id=item.Username  })
                        </span>
                        <span>
                        @Html.ActionLink("Details", "Details", new { id = item.Username }) 
                        </span>
                        <span>
                            @Html.ActionLink("Delete", "Delete", new { id = item.Username })
                        </span>
                        
                        }

            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>
        function selectRole(role) {
            document.getElementById('dropdownButton').textContent = role;
            document.getElementById('selectedRole').value = role;
            document.getElementById('form').action = '@Url.Action("AllFarmers","Farmer")'; // Set the form action dynamically
            document.getElementById('form').submit(); // Submit the form to update TempData
        }

        // Update dropdown menu text when page loads (optional)
        window.addEventListener('DOMContentLoaded', function () {
            document.getElementById('dropdownButton').textContent = '@selectedRole';
        });
    </script>

}